package axela.portal;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import cloudify.connect.Connect;
import cloudify.connect.Smart;
import java.util.HashMap;
import java.util.Map;
import javax.sql.rowset.CachedRowSet;

public class ManageTitle extends Connect {

	public String LinkHeader = "<a href=home.jsp>Home</a> &gt; <a href=manager.jsp>Business Manager</a> &gt; <a href=managetitle.jsp?all=yes>List Titles</a>:";
	public String LinkListPage = "managetitle.jsp";
	public String LinkExportPage = "";
	public String LinkFilterPage = "";
	public String LinkAddPage = "<a href=managetitle-update.jsp?add=yes>Add Title...</a>";
	public String ExportPerm = "";
	public String StrHTML = "";
	public String go = "";
	public String msg = "";
	public String all = "";
	public String StrSql = "";
	public String StrSearch = "";
	public String PageNaviStr = "";
	public String RecCountDisplay = "";
	public String carmanuf_id = "0";
	public String CountSql = "";
	public String PageURL = "";
	public String StrJoin = "";
	public int recperpage = 0;
	public int PageCount = 10;
	public int PageSpan = 10;
	public int PageCurrent = 0;
	public String PageCurrents = "";
	public String QueryString = "";
	public String emp_id = "0";
	public String title_id = "0";
	public Smart SmartSearch = new Smart();
	public String smart = "";
	Map<Integer, Object> map = new HashMap<Integer, Object>();
	public String advSearch = "";
	public String smartarr[][] = {
			{ "Keyword", "text", "keyword_arr" },
			{ "Title ID", "numeric", "title_id" },
			{ "Title Description", "text", "title_desc" },
			{ "Title Rank", "text", "title_rank" },
			{ "Entry By", "text",
					"title_entry_id IN (SELECT emp_id FROM axela_emp WHERE emp_name" },
			{ "Entry Date", "date", "title_entry_date" },
			{ "Modified By", "text",
					"title_modified_id IN (SELECT emp_id FROM axela_emp WHERE emp_name" },
			{ "Modified Date", "date", "title_modified_date" } };

	public void doPost(HttpServletRequest request, HttpServletResponse response) {
		try {
			HttpSession session = request.getSession(true);
			emp_id = session.getAttribute("emp_id") + "";
			recperpage = Integer.parseInt(session
					.getAttribute("emp_recperpage") + "");
			CheckPerm("emp_role_id", request, response);
			PageCurrents = CNumeric(PadQuotes(request
					.getParameter("PageCurrent")));
			QueryString = PadQuotes(request.getQueryString());
			msg = PadQuotes(request.getParameter("msg"));
			all = PadQuotes(request.getParameter("all"));
			title_id = CNumeric(PadQuotes(request.getParameter("title_id")));
			advSearch = PadQuotes(request.getParameter("advsearch_button"));

			if (msg.toLowerCase().contains("delete")) {
				StrSearch = " AND title_id = 0";
			} else  if ("yes".equals(all)) {
				msg = msg + "<br>Results for All Titles!";
				StrSearch = StrSearch + " and title_id > 0";
			}
			if (!title_id.equals("0")) {
				msg = msg + "<br>Results for Title(s) ID = " + title_id + "!";
				StrSearch = StrSearch + " and title_id = ?";
				map.put(1, title_id);
			} else if (advSearch.equals("Search")) // for keyword search
			{
				StrSearch = SmartSearch.BuildSmartSql(smartarr, request);
				if (StrSearch.equals("")) {
					msg = "Enter Search Text!";
					StrSearch = StrSearch + " and title_id = 0 ";
				} else {
					msg = "Results for Search!";
				}
			}
			if (!StrSearch.equals("")) {
				session.setAttribute("statestrsql", StrSearch);
			}
			StrHTML = Listdata();
		} catch (Exception ex) {
			System.out.println("Mycover===" + this.getClass().getName());
			System.out.println("Error in "
					+ new Exception().getStackTrace()[0].getMethodName() + ": "
					+ ex);
		}
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request, response);
	}

	public String Listdata() {
		int PageListSize = 10;
		int StartRec = 0;
		int EndRec = 0;
		int TotalRecords = 0;
		StringBuilder Str = new StringBuilder();
		// Check PageCurrent is valid for parse int
		if (!msg.equals("")) {
			if (PageCurrents.equals("0")) {
				PageCurrents = "1";
			}
			//
			PageCurrent = Integer.parseInt(PageCurrents);

			// to know no of records depending on search
			StrSql = "SELECT title_id, title_gender,title_desc,title_rank";
					//+ " (select count(carmodel_id) from axela_car_model where carmodel_carmanuf_id = carmanuf_id) as modelcount";

			StrJoin = " FROM axela_title" + " where 1 = 1";
			CountSql = "SELECT Count(distinct title_id)";

			StrSql = StrSql + StrJoin;
			CountSql = CountSql + StrJoin;

			SOP("StrSql"+StrSql);
			if (!(StrSearch.equals(""))) {
				StrSql = StrSql + StrSearch;
				CountSql = CountSql + StrSearch;
				SOP("CountSql-------"+CountSql);
				
			}
			TotalRecords = Integer.parseInt(ExecutePrepQuery(CountSql, map, 0));

			if (TotalRecords != 0) {
				StartRec = ((PageCurrent - 1) * recperpage) + 1;
				EndRec = ((PageCurrent - 1) * recperpage) + recperpage;
				// if limit ie. 10 > totalrecord
				if (EndRec > TotalRecords) {
					EndRec = TotalRecords;
				}

				RecCountDisplay = "Displaying " + (StartRec) + " - " + (EndRec)
						+ " of " + TotalRecords + " Title(s)";

			
				if (QueryString.contains("PageCurrent") == true) {
					QueryString = QueryString.replaceAll("&PageCurrent="
							+ PageCurrent + "", "");
				}
				PageURL = "managetitle.jsp?" + QueryString + "&PageCurrent=";
				PageCount = (TotalRecords / recperpage);
				if ((TotalRecords % recperpage) > 0) {
					PageCount = PageCount + 1;
				}
				// display on jsp page

				PageNaviStr = PageNavi(PageURL, PageCurrent, PageCount,
						PageListSize);
				StrSql = StrSql + " GROUP BY title_id "
						        + " order by title_id desc ";
				StrSql = StrSql + " limit " + (StartRec - 1) + ", "
						+ recperpage + "";
			
				try {
					CachedRowSet rs = processPrepQuery(StrSql, map, 0);
					int count = StartRec - 1;
					Str.append("<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\" class=\"listtable\">");
					Str.append("<tr align=center>\n");
					Str.append("<th width=5%>#</th>\n");
					Str.append("<th>Gender</th>\n");
					Str.append("<th>Description</th>\n");
					Str.append("<th>Rank</th>\n");
					Str.append("<th width=20%>Actions</th>\n");
					Str.append("</tr>\n");
					while (rs.next()) {
						count = count + 1;
						Str.append("<tr>\n");
						Str.append("<td valign"
								+ "=top align=center>")
								.append(count).append("</td>\n");
						Str.append("<td valign=top>");
						if(rs.getString("title_gender").equals("1"))
						{
							Str.append("male");
						}
						else
						{
							Str.append("female");
						}
						
						Str.append("</td>\n");
						Str.append("<td valign=top>");
						Str.append(rs.getString("title_desc"));
						Str.append("</td>\n");
						Str.append("<td valign=top>");
						Str.append(rs.getString("title_rank"));
						Str.append("</td>\n");
					
						Str.append("<td valign=top>");
						Str.append(
								"<a href=\"managetitle-update.jsp?Update=yes&title_id=")
								.append(rs.getString("title_id"))
								.append(" \">Update Title</a></br>");
					}
					rs.close();
					map.clear();
					Str.append("</tr>\n");
					Str.append("</table>\n");
				} catch (Exception ex) {
					System.out.println("Mycover===" + this.getClass().getName());
					System.out.println("Error in "
							+ new Exception().getStackTrace()[0]
									.getMethodName() + ": " + ex);
					return "";
				}
			} else {
				RecCountDisplay = "<br><br><br><br><font color=red>No Title(s) Found!</font><br><br>";
			}
		}
		return Str.toString();
	}
}
