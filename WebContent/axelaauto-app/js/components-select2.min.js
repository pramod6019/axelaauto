var ComponentsSelect2 = function() {
	var e = function() {
		function e(e) {
			if (e.loading)
				return e.text;
			var t = "<div class ='select2-result-repository clearfix'>"
					+ "<div class='select2-result-repository__title'>" + e.text
					+ "</div>";

			return t

		}
		function t(e) {
			return e.full_name || e.text
		}
		$.fn.select2.defaults.set("theme", "bootstrap");
		var s = "Select Option";

				// / "select2-selection__rendered" is the Class name
				// / which we are using for our Select2 for setting the
				// properties

				$(".select2-selection__rendered, .select2, .select2-multiple")
						.select2({
							placeholder : s,
							width : null
						}),
				$(".select2-allow-clear").select2({
					allowClear : !0,
					placeholder : s,
					width : null
				}),

				// "#maincity" is for populating the city in Select2

				$("#maincity").select2({
					width : "off",
					ajax : {
						url : "../portal/city-check.jsp",
						dataType : "json",
						delay : 100,
						data : function(e) {
							return {
								city : e.term
							}
						},
						processResults : function(e, t) {
							return {
								results : e.cities
							}
						},
						cache : !0
					},
					escapeMarkup : function(e) {
						return e
					},

					minimumInputLength : 2,
					placeholder : "Select City",
					dropdownAutoWidth : 'true',
					width : 'resolve',
					templateResult : e,
					templateSelection : t
				}),

				// "#preownedvariant" is for populating vehicle model in Select2

				$("#preownedvariant, #preownedvariant1").select2({
					width : "off",
					ajax : {
						url : "../preowned/preowned-variant-check.jsp",
						dataType : "json",
						delay : 100,
						data : function(e) {
							return {
								variant : e.term

							}
						},
						processResults : function(e, t) {
							return {
								results : e.variants
							}
						},
						cache : !0
					},
					escapeMarkup : function(e) {
						return e
					},

					minimumInputLength : 2,
					placeholder : "Select Model",
					dropdownAutoWidth : 'true',
					width : 'resolve',
					templateResult : e,
					templateSelection : t
				}),
				$("#preownedvariant2, #enquiry_tradein_preownedvariant_id")
						.select2({
							width : "off",
							ajax : {
								url : "../preowned/preowned-variant-check.jsp",
								dataType : "json",
								delay : 100,
								data : function(e) {
									return {
										variant : e.term

									}
								},
								processResults : function(e, t) {
									return {
										results : e.variants
									}
								},
								cache : !0
							},
							escapeMarkup : function(e) {
								return e
							},

							minimumInputLength : 2,
							allowClear : true,// <-- This property will allow
												// the user to delete the
												// selected value from SELECT-2
							placeholder : "Select Model",
							dropdownAutoWidth : 'true',
							width : 'resolve',
							templateResult : e,
							templateSelection : t
						}),
						$("#jlrothermodelofinterest").select2({
							width : "off",
							ajax : {
								url : "../preowned/preowned-variant-check.jsp?othermodelsjlr=yes",
								dataType : "json",
								delay : 100,
								data : function(e) {
									return {
										variant : e.term

									}
								},
								processResults : function(e, t) {
									return {
										results : e.variants
									}
								},
								cache : !0
							},
							escapeMarkup : function(e) {
								return e
							},

							minimumInputLength : 2,
							allowClear:true,// <-- This property will allow the user to delete the selected value from SELECT-2
							placeholder: "Select Model",
							dropdownAutoWidth: 'true',
							width:'resolve',
							templateResult : e,
							templateSelection : t
						}),
						$("#jlrcurrentvehicle").select2({
							width : "off",
							ajax : {
								url : "../preowned/preowned-variant-check.jsp?currentvehiclejlr=yes",
								dataType : "json",
								delay : 100,
								data : function(e) {
									return {
										variant : e.term

									}
								},
								processResults : function(e, t) {
									return {
										results : e.variants
									}
								},
								cache : !0
							},
							escapeMarkup : function(e) {
								return e
							},

							minimumInputLength : 2,
							allowClear:true,// <-- This property will allow the user to delete the selected value from SELECT-2
							placeholder: "Select Model",
							dropdownAutoWidth: 'true',
							width:'resolve',
							templateResult : e,
							templateSelection : t
						}),
				$("#porscheothervehicle")
						.select2(
								{
									width : "off",
									ajax : {
										url : "../preowned/preowned-variant-check.jsp?currentvehicle=yes",
										dataType : "json",
										delay : 100,
										data : function(e) {
											return {
												variant : e.term

											}
										},
										processResults : function(e, t) {
											return {
												results : e.variants
											}
										},
										cache : !0
									},
									escapeMarkup : function(e) {
										return e
									},

									minimumInputLength : 2,
									allowClear : true,// <-- This property
														// will allow the user
														// to delete the
														// selected value from
														// SELECT-2
									placeholder : "Select Model",
									dropdownAutoWidth : 'true',
									width : 'resolve',
									templateResult : e,
									templateSelection : t
								}),
				$("#ledger, #ledger1, #ledger2").select2({
					width : "off",
					ajax : {
						url : "../accounting/ledger-check.jsp?getledger=yes",
						dataType : "json",
						delay : 100,
						data : function(e) {
							return {
								ledger : e.term
							}
						},
						processResults : function(e, t) {
							return {
								results : e.ledgers
							}
						},
						cache : !0
					},
					escapeMarkup : function(e) {
						return e
					},

					minimumInputLength : 2,
					placeholder : "Select Ledger",
					dropdownAutoWidth : 'true',
					width : 'resolve',
					templateResult : e,
					templateSelection : t
				}),
				$("#accountingsupplier").select2({
					width : "off",
					ajax : {
						url : "../accounting/ledger-check.jsp?supplier=yes",
						dataType : "json",
						delay : 100,
						data : function(e) {
							return {
								ledger : e.term
							}
						},
						processResults : function(e, t) {
							return {
								results : e.ledgers
							}
						},
						cache : !0
					},
					escapeMarkup : function(e) {
						return e
					},

					minimumInputLength : 2,
					placeholder : "Select Supplier",
					dropdownAutoWidth : 'true',
					width : 'resolve',
					templateResult : e,
					templateSelection : t
				}),

				$("button[data-select2-open]").click(function() {
					$("#" + $(this).data("select2-open")).select2("open")
				}),
				$(":checkbox").on(
						"click",
						function() {
							$(this).parent().nextAll("select").prop("disabled",
									!this.checked)
						}),

				// "select2-selection__rendered" is the Class name
				// which we are using for our Select2 for setting the properties

				$(
						".select2-selection__rendered,"
								+ " .select2, .select2-multiple,"
								+ " .select2-allow-clear,"
								+ " .js-data-example-ajax")
						.on(
								"select2:open",
								function() {
									if ($(this).parents("[class*='has-']").length)
										for (var e = $(this).parents(
												"[class*='has-']")[0].className
												.split(/\s+/), t = 0; t < e.length; ++t)
											e[t].match("has-")
													&& $(
															"body > .select2-container")
															.addClass(e[t])
								}),
				$(".js-btn-set-scaling-classes")
						.on(
								"click",
								function() {
											$(
													"#select2-multiple-input-sm, #select2-single-input-sm")
													.next(
															".select2-container--bootstrap")
													.addClass("input-sm"),
											$(
													"#select2-multiple-input-lg, #select2-single-input-lg")
													.next(
															".select2-container--bootstrap")
													.addClass("input-lg"), $(
													this).removeClass(
													"btn-primary btn-outline")
													.prop("disabled", !0)
								})
	};
	return {
		init : function() {
			e()
		}
	}
}();
App.isAngularJsApp() === !1 && jQuery(document).ready(function() {
	ComponentsSelect2.init()
});